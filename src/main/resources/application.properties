spring.application.name=inventory-service
server.port=8082

spring.datasource.url=jdbc:postgresql://postgres:5432/inventory
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update

springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

#Kafka properties
spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.consumer.group-id=inventory-service-group
spring.kafka.consumer.properties.spring.json.type.mapping=event:org.service.inventoryservice.event.ProductEvent
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.producer.properties.spring.json.type.mapping=event:org.service.inventoryservice.event.NotificationEvent
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=product-service

management.tracing.sampling.probability=1.0

loki.url=http://loki:3100/loki/api/v1/push